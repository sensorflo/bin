#!/bin/bash

. ansi_escape_codes

echo -e "${BWhi}Demonstrates that Git objects are really simple:${RCol}"
cat <<EOF
- From the id of an object directly follows the name of the file storing its
  content (ignoring packed objects).
- The decompressed (deflate) file content is the content of the object, which
  is for all object types to an large extend human readable text.


EOF

# make 0x00 a newline (because that's pretty since the object type is
# separated from the actual content by an 0x00) and all other non-printable an
# '?'.
function replace_non_printable_chars {
  perl -pe 's/\x00/\n/g; s/[^[:print:]](?<=\V)/?/g'
}

if ! which tree >/dev/null; then
  echo "Command 'tree' not found. If you have apt: sudo apt-get install tree" >2
  exit 1
fi
if ! which zlib-flate >/dev/null; then
  echo "Command 'zlib-flate' not found. If you have apt: sudo apt-get install zlib" >2
  exit 1
fi

if [ -d .git ]; then
  cd .git
fi

echo -e "${BWhi}Filetree of Git object related files in the .git directory:${RCol}"
tree -n --noreport objects
echo
echo

echo -e "${BWhi}Decompressed content of these files:${RCol}"
find objects -type f -regex 'objects/[0-9a-f][0-9a-f]/.*' |
  while read objectIdAsPath; do
    echo -e "${Blu}file $objectIdAsPath:${RCol}"
    zlib-flate -uncompress <"$objectIdAsPath" | replace_non_printable_chars
    echo
  done
